name: 'PickHaxe - Build Project'
description: 'Runs "pickhaxe build" and "pickhaxe make"'

inputs:
  os:
    description: 'Docker image used to run this build'
    required: true
    default: ubuntu-latest
  haxe:
    description: 'Haxe version used to run this build'
    required: true
    default: nightly 
  sample:
    description: 'The name of the sample to build'
    required: true
  mcloader:
    description: 'The Minecraft mod loader to target'
    required: true
  mcversion:
    description: 'The Minecraft version to target'
    required: true
  pickhaxe:
    description: 'The PickHaxe version to install'
    required: true
    default: '@git:https://github.com/EliteMasterEric/PickHaxe#develop' # Latest development version

runs:
  using: "composite"
  steps:
    - name: "Print Inputs"
      shell: bash
      run: |
        echo "os: ${{inputs.os}}"
        echo "haxe: ${{inputs.haxe}}"
        echo "sample: ${{inputs.sample}}"
        echo "mcloader: ${{inputs.mcloader}}"
        echo "mcversion: ${{inputs.mcversion}}"
        echo "pickhaxe: ${{inputs.pickhaxe}}"
    - name: "Setup: Java 17"
      uses: actions/setup-java@v3
      with:
        distribution: 'oracle'
        java-version: '17'
    - name: "Setup: Haxe ${{ inputs.haxe }}"
      uses: krdlab/setup-haxe@v1.5.1
      with:
        haxe-version: latest # Development build
    - name: Config haxelib
      shell: bash
      run: |
        haxelib config
    - name: "Setup: PickHaxe (Release)"
      shell: bash
      if: ${{ inputs.pickhaxe == 'haxelib' }}
      run: |
        haxe -version
        haxelib git haxelib https://github.com/HaxeFoundation/haxelib.git master
        haxelib version
        haxelib install hxjava
        haxelib install pickhaxe
    - name: "Setup: PickHaxe (Development)"
      shell: bash
      if: ${{ inputs.pickhaxe == 'git' }}
      run: |
        haxe -version
        haxelib git haxelib https://github.com/HaxeFoundation/haxelib.git master
        haxelib version
        haxelib install hxjava
        haxelib git pickhaxe https://github.com/EliteMasterEric/PickHaxe develop
    - name: "Build: pickhaxe build"
      # Using Mojang mappings because they're more up-to-date (they have fewer docs but we don't need them)
      shell: bash
      run: |
        cd ./${{inputs.sample}}
        haxelib run pickhaxe build ${{inputs.mcloader}} ${{inputs.mcversion}} --make --mappings mojang
