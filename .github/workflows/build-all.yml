name: Build All
on:
  workflow_dispatch: # We can run this workflow manually
    inputs:
  push: # We run this workflow whenever we push (but only if a relevant file changed)
    branches:
    - '**'
    tags-ignore:
    - '**'
    paths-ignore:
    - '**/*.adoc'
    - '**/*.md'
    - '.editorconfig'
    - '.git*'
    - '.github/*.yml'
    - 'tools'

defaults:
  run:
    shell: bash

# The jobs to perform; these run in parallel.
jobs:
  # Perform a PickHaxe build and make.
  # The task should fail if Gradle fails.
  build:
    name: ${{(matrix.pickhaxe == '') && 'Release' || 'Develop'}} (${{matrix.sample}} ${{matrix.mcloader}} ${{matrix.mcversion}})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
        - ubuntu-latest
        haxe:
        - 4.3.1
        sample:
        - madeinhaxe
        - obsidianarmor
        mcloader:
        - fabric
        - forge
        mcversion:
        - latest-snapshot
        - latest
        - 1.20.1
        - 1.20 # 1.20.0
        - 1.19.4
        - 1.19.3
        - 1.19.2
        - 1.19.1
        - 1.19 # 1.19.0
        - 1.18.2
        - 1.18.1
        - 1.18 # 1.18.0
        - 1.17.1
        - 1.17 # 1.17.0
        - 1.16.5
        - 1.16.4
        - 1.16.3
        - 1.16.2
        - 1.16.1
        - 1.16 # 1.16.0
        pickhaxe:
        # - '' # Current HaxeLib version (NOTE: pickhaxe doesn't work on haxelib right now)
        - '@git:https://github.com/EliteMasterEric/PickHaxe#develop' # Latest development version
        exclude:
        - mcversion: latest-snapshot # Forge does not target snapshots, Fabric does.
          mcloader: forge
        - mcversion: 1.17 # Forge 1.17.0 doesn't exist
          mcloader: forge
        - mcversion: 1.16 # Forge 1.16.0 doesn't exist
          mcloader: forge
                  - 1.18.2
        # Disable Forge below 1.19.
        - mcversion: 1.18.1
          mcloader: forge
        - mcversion: 1.18
          mcloader: forge
        - mcversion: 1.17.1
          mcloader: forge
        - mcversion: 1.17
          mcloader: forge
        - mcversion: 1.16.5
          mcloader: forge
        - mcversion: 1.16.4
          mcloader: forge
        - mcversion: 1.16.3
          mcloader: forge
        - mcversion: 1.16.2
          mcloader: forge
        - mcversion: 1.16.1
          mcloader: forge
        - mcversion: 1.16
          mcloader: forge
    env:
      pickhaxe: ${{(matrix.pickhaxe == '') && 'Release' || 'Develop'}}
    steps:
    - name: "Setup: Git Checkout"
      uses: actions/checkout@v3
    - name: "Build: pickhaxe build && pickhaxe make"
      uses: ./.github/actions/build-pickhaxe-sample
      with:
        os: ${{matrix.os}}
        haxe: ${{matrix.haxe}}
        sample: ${{matrix.sample}}
        mcloader: ${{matrix.mcloader}}
        mcversion: ${{matrix.mcversion}}
        pickhaxe: ${{matrix.pickhaxe}}
    - name: "Cleanup: Upload Artifacts"
      if: env.ACT != 'true' # https://github.com/nektos/act#skipping-steps
      uses: actions/upload-artifact@v3
      with:
        name: ${{matrix.sample}}-${{matrix.mcloader}}-${{matrix.mcversion}}_${{(matrix.pickhaxe == '') && 'release' || 'develop'}}
        path: ./${{matrix.sample}}/build/${{matrix.mcloader}}/${{matrix.mcversion}}/*.jar
    - name: "Cleanup: Update Badge (Success)"
      if: ${{ success() }}
      uses: RubbaBoy/BYOB@v1.3.0
      with:
        NAME: build-${{matrix.sample}}-${{matrix.mcloader}}-${{matrix.mcversion}}_${{(matrix.pickhaxe == '') && 'release' || 'develop'}}
        LABEL: ${{matrix.mcloader}} v${{matrix.mcversion}}
        ICON: 'github'
        STATUS: 'passing'
        COLOR: 'green'
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: "Cleanup: Update Badge (Failure)"
      if: ${{ failure() }}
      uses: RubbaBoy/BYOB@v1.3.0
      with:
        NAME: build-${{matrix.sample}}-${{matrix.mcloader}}-${{matrix.mcversion}}_${{(matrix.pickhaxe == '') && 'release' || 'develop'}}
        LABEL: ${{matrix.mcloader}} v${{matrix.mcversion}}
        ICON: 'github'
        STATUS: 'failing'
        COLOR: 'red'
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}